@page "/Logs"
@using LightManager.Shared
@using LightManager.Shared.Models
@using System.Web
@inject HttpClient Http

<PageTitle>Logs</PageTitle>

<h1>Logs</h1>

@if (logs is null || !logs.Any())
{
	<p><em>Loading or no logs are available.</em></p>
}
else if (logs is not null)
{
	<table class="col-md-12 table-bordered table-striped table-condensed cf">
		<tr>
			<th>Description</th>
			<th>Filename</th>
            <th>LastModified</th>
            <th>Downloaded</th>
            <th>MagnetLink</th>
		</tr>

		@foreach (var item in logs)
		{
			<tr>
				<td>@item.Description</td>
				<td>@item.Filename</td>
                <td>@item.LastModified</td>
                <td>@item.Downloaded</td>
                <td>@(string.Concat(@item.MagnetLink.Take(20)))</td>
			</tr>
		}
</table>
}




@code {
    private List<TaskItem> logs = new List<TaskItem>();

    protected override async Task OnInitializedAsync()
    {
        await LogProcessor();
    }
    private async Task LogProcessor()
    {
        logs = await Http.GetFromJsonAsync<List<TaskItem>>($"api/Logs/GetLogs");
        StateHasChanged();
    }






}
